AWSTemplateFormatVersion: '2010-09-09'
Description: Nested stack for compute resources

Parameters:
  KeyName:
    Description: Name of the EC2 Key Pair
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: EC2 Instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    ConstraintDescription: Valid EC2 instance types.
  VpcId:
    Description: The VPC ID
    Type: String
  PublicSubnet1:
    Description: The public subnet ID
    Type: String
  MySecurityGroup:
    Description: The security group ID
    Type: String
  SecurityAlertsTopicARN:
    Description: The ARN of the Security Alerts SNS topic
    Type: String
  CloudPlatformTeamAlertsTopicARN:
    Description: The ARN of the Cloud Platforms SNS topic
    Type: String

Resources:
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [ !Ref EC2Role ]

  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchAgentPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:DescribeLogStreams
                  - logs:DescribeLogGroups
                Resource: "*"

  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref InstanceProfile
      ImageId:
        Fn::Sub: "{{resolve:ssm:/my-ami/ami-0551ce4d67096d606}}"
      SecurityGroupIds:
        - !Ref MySecurityGroup
      SubnetId: !Ref PublicSubnet1
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: Opdracht2
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            # Get the latest CloudFormation package
            yum update -y aws-cfn-bootstrap
            # Start cfn-init
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r MyInstance --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
    Metadata:
      Comment: install Apache HTTP
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
              amazon-cloudwatch-agent: []
              collectd: []
          files:
            "/var/www/html/index.html":
              content: |
                <html><body><h1>Hello Conclusion Xforce</h1>
                <p> Created with cfn-init</p></body></html>
              mode: '000644'
            "/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json":
              content: |
                {
                  "logs": {
                    "logs_collected": {
                      "files": {
                        "collect_list": [
                          {
                            "file_path": "/var/log/httpd/access_log",
                            "log_group_name": "ApacheAccessLog",
                            "log_stream_name": "{instance_id}"
                          },
                          {
                            "file_path": "/var/log/httpd/error_log",
                            "log_group_name": "ApacheErrorLog",
                            "log_stream_name": "{instance_id}"
                          }
                        ]
                      }
                    }
                  },
                  "metrics": {
                    "metrics_collected": {
                      "collectd": {},
                      "cpu": {
                        "measurement": [
                          "cpu_usage_idle",
                          "cpu_usage_iowait",
                          "cpu_usage_user",
                          "cpu_usage_system"
                        ],
                        "metrics_collection_interval": 60,
                        "totalcpu": true
                      },
                      "disk": {
                        "measurement": [
                          "used_percent"
                        ],
                        "metrics_collection_interval": 60,
                        "resources": [
                          "*"
                        ]
                      },
                      "mem": {
                        "measurement": [
                          "mem_used_percent"
                        ],
                        "metrics_collection_interval": 60
                      }
                    }
                  }
                }
          commands:
            hello:
              command: "echo 'hello world'"
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              amazon-cloudwatch-agent:
                enabled: 'true'
                ensureRunning: 'true'