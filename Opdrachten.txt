1) maak een virtual machine in een VPC

· Let op: deze oplossing graag als CloudFormation stack schrijven

· Ik wil graag een VPC met drie public subnets (1 per AZ)

· Binnen een van de subnets graag een VM (op basis van de nieuwste versie Amazon Linux 2023)

· Bij het starten van de VM moet Apache geinstalleerd worden

· De index.html file van Apache moet de inhoud “<h>Hello Conclusion Xforce</h>” hebben

· Ook de CloudWatch agent moet geinstalleerd worden. Ik wil graag in CloudWatch de volgende logs:

o Errorlog Apache

o Accesslog Apache

· Binnen CloudWatch wil ik graag een metric, waarin aangegeven wordt hoevaak 1.2.3.4/erwin aangeroepen wordt (met 1.2.3.4 uiteraard het public IP adres van je VM).

Vragen:

· Hoe zorg je ervoor dat je telkens de nieuwste VM obv Amazon Linux 2023 krijgt?

· Hoe zorg je er voor dat een resource die afhankelijk is van de VM pas start nadat alle acties op de VM zijn uitgevoerd?

· Hoe zorg je er voor dat als je de opstart commando’s van de VM verandert en je rolt de stack opnieuw uit, dat dan ook de wijzigingen in de opstart commando’s mee veranderen?

Als je tijd over hebt:

· Ik wil graag een Load Balancer ervoor. Ik wil ook graag dat als het CPU gebruik van de VM boven de 80% komt, dat er dan een extra node bij komt. Als het CPU gebruik onder de 20% komt moet met een VM minder gedraaid worden (wel altijd minimaal 1).

Vragen:

· Welke type Load Balancers ken je?

· Welk type zou je hier gebruiken en waarom?

2) Reageren op logs

· Werk verder met de template uit opdracht 1. Bewaar de oplossing uit opdracht 1 wel als afzonderlijke template, we gaan in latere opdrachten verder met deze template uit opdracht 1.

· Er is een hacker gesignalleerd! Het blijkt dat deze een nogal bijzondere werkwijze heeft: zodra hij begint vraagt hij de niet bestaande pagina 1.2.3.4/ik-kom-eraan aan. Hij geeft vervolgens een parameter mee hoe intensief hij bezig gaat, als hij alleen rond wil kijken dan roept hij bijvoorbeeld 1.2.3.4/ik-kom-eraan?severity=low aan. Als hij de boel plat wil leggen roept hij 1.2.3.4/ik-kom-eraan?severity=high aan.

· Security wil graag weten als de hacker aan het werk is, ze willen graag een e-mail krijgen als de hacker zich aanmeldt (onafhankelijk van de meegegeven parameter).

· Als cloud platform team willen jullie ook gewaarschuwd worden, maar alleen vlak voordat hij echt iets verschrikkelijks gaat doen, dus alleen bij de parameter ?severity=high. Je wilt dan ook het IP adres weten waarmee hij werkt. Zorg ervoor dat het Cloud Platform Team een e-mail krijgt met het IP adres van de hacker bij ?sevirity=high

· Nu we het IP adres van de hacker kennen kunnen we de hacker ook aanpakken. Zorg ervoor dat mensen met dit specifieke IP adres niet meer binnenkomen op onze site.

Vraag:

· Er zijn minstens 3 oplossingen voor de laatste vraag (mede afhankelijk van welke resources je in opdracht 1 gedeployed hebt). Welke oplossingen ken je?

· In de praktijk zul je soms bepaalde landen willen uitsluiten, welke oplossing gebruik je hiervoor?

· Als cloud platform team willen we graag alle access logs van Apache doorsturen naar Elastic Search. Hoe kunnen we dat het beste aanpakken?

· Stel dat we alle logs van alle CloudWatch log groups door willen sturen naar Elastic Search, hoe pakken we dat dan zo aan dat we nooit vergeten om de oplossing uit de vorige vraag ook te implementeren?

3) Containers

· Werk verder met het CloudFormation template uit opdracht 1 (of opdracht 2).

· Er is een nieuwe standaard bedacht, virtual machines zijn uit de mode en moeten eruit!

· Maak een container met Apache, de logs moeten nog steeds naar CloudWatch toe. Maak gebruik van de CloudWatch container image.

· Als dit werkt, zorg er dan voor dat ook autoscaling achter de load balancer weer werkt.

· Zorg ervoor dat het duidelijk is welke vulnerabilities nog in de container zitten.

Vragen:

· Welke container services ken je in AWS? Wanneer gebruik je welke service?

· Welke AWS service gebruik je om ervoor te zorgen dat plaatjes die je via de ene container toevoegt ook in een andere container zichtbaar zijn?

4) Databases

· Werk verder met de template uit opdracht 3

· Zelf een eigen website schrijven… wie doet dat nog… Installeer WordPress op de container uit opdracht 3. Maak gebruik van een eigen Dockerfile/Containerfile. Maak gebruik van een serverless database in AWS.

· We willen graag weten als RDS meer resources gebruikt. Via welke metric kunnen we zien als we meer gaan afnemen (en dus ook meer gaan betalen)? Hoe kunnen we een bericht krijgen (en misschien zelfs in een dashboard zien?) als we meer dan x databasecapaciteit gebruiken?